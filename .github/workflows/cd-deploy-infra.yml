name: CD - Deploy Infrastructure via Terraform

on:
  # Triggered by the CI repository sending a dispatch event
  repository_dispatch:
    types: [new-image-build] # Matches the event-type sent from CI workflow

  # Allows manual triggering from the GitHub Actions UI
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag to deploy (e.g., commit SHA)'
        required: true

env:
  AWS_REGION: ap-south-1
  TF_VAR_container_image_tag: ${{ github.event.client_payload.image_tag || github.event.inputs.image_tag }} # Get tag from dispatch payload or manual input

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # If using OIDC for Terraform

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        path: main-infra # Checkout infra code to a specific subdirectory

    - name: Checkout TFVars from Config Repo
      uses: actions/checkout@v4
      with:
        repository: VedantDomadiya/hello-world-infra-configs # Replace with your config repo path
        token: ${{ secrets.CONFIG_REPO_PAT }} # PAT with read access to the config repo
        path: config-repo # Checkout config repo to a subdirectory
        ref: main # Or the branch where your tfvars are

    # Configure AWS Credentials (using OIDC or secrets)
    # Ensure these credentials have Terraform permissions (ECS, RDS, VPC, IAM, SecretsManager, etc.)
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      # Optionally specify terraform_version

    - name: Determine TFVars Path
      id: tfvars_path
      run: echo "path=./config-repo/${{ github.event.inputs.environment_config }}/terraform.tfvars" >> $GITHUB_OUTPUT

    - name: Verify TFVars File
      run: |
        echo "Looking for tfvars file at: ${{ steps.tfvars_path.outputs.path }}"
        ls -la ./config-repo/${{ github.event.inputs.environment_config }}/
        if [ ! -f "${{ steps.tfvars_path.outputs.path }}" ]; then
          echo "Error: ${{ steps.tfvars_path.outputs.path }} not found!"
          exit 1
        fi
        echo "TFVars file found."

    - name: Terraform Init
      id: init
      # Run from the directory where the main Terraform code was checked out
      run: terraform -chdir=./main-infra/terraform init

    - name: Terraform Plan
      id: plan
      run: |
        terraform -chdir=./main-infra/terraform plan -no-color -input=false \
          -var-file="${{ steps.tfvars_path.outputs.path }}"
      # Note: TF_VAR_container_image_tag is automatically picked up

    - name: Terraform Apply
      id: apply
      run: |
        terraform -chdir=./main-infra/terraform apply -auto-approve -input=false \
          -var-file="${{ steps.tfvars_path.outputs.path }}"